!(function (t, i) { typeof exports == 'object' && typeof module != 'undefined' ? module.exports = i() : typeof define == 'function' && define.amd ? define(i) : (t = typeof globalThis != 'undefined' ? globalThis : t || self).dayjs_plugin_badMutable = i() }(this, () => { 'use strict'; return function (t, i) { const n = i.prototype; n.$g = function (t, i, n) { return this.$utils().u(t) ? this[i] : this.$set(n, t) }, n.set = function (t, i) { return this.$set(t, i) }; const e = n.startOf; n.startOf = function (t, i) { return this.$d = e.bind(this)(t, i).toDate(), this.init(), this }; const s = n.add; n.add = function (t, i) { return this.$d = s.bind(this)(t, i).toDate(), this.init(), this }; const o = n.locale; n.locale = function (t, i) { return t ? (this.$L = o.bind(this)(t, i).$L, this) : this.$L }; const r = n.daysInMonth; n.daysInMonth = function () { return r.bind(this.clone())() }; const u = n.isSame; n.isSame = function (t, i) { return u.bind(this.clone())(t, i) }; const f = n.isBefore; n.isBefore = function (t, i) { return f.bind(this.clone())(t, i) }; const d = n.isAfter; n.isAfter = function (t, i) { return d.bind(this.clone())(t, i) } } }))
